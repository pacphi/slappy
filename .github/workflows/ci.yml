name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

      - name: Check formatting
        run: pnpm format:check

  build-web:
    name: Build Nuxt Web App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Puppeteer dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends --fix-missing \
            ca-certificates \
            fonts-liberation \
            libasound2 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libcups2 \
            libdbus-1-3 \
            libdrm2 \
            libgbm1 \
            libgtk-3-0 \
            libnspr4 \
            libnss3 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxkbcommon0 \
            libxrandr2 \
            xdg-utils \
            wget

      - name: Build Nuxt
        run: pnpm build

      - name: Upload Nuxt build artifacts
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: nuxt-build
          path: |
            .output/
          retention-days: 7
          if-no-files-found: warn

  test-cli:
    name: Test CLI Tool with Sample CSV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test CLI with sample/sample-roster.csv
        run: pnpm test:local

      - name: Verify HTML output generated
        run: |
          if [ ! -f "sample/sample-roster-tags.html" ]; then
            echo "❌ Error: Output HTML file not generated"
            exit 1
          fi
          echo "✅ HTML file generated successfully"

          # Check file size (should be > 1KB for valid HTML)
          size=$(stat -c%s "sample/sample-roster-tags.html" 2>/dev/null || stat -f%z "sample/sample-roster-tags.html")
          if [ "$size" -lt 1024 ]; then
            echo "❌ Error: Output file is too small ($size bytes)"
            exit 1
          fi
          echo "✅ Output file size: $size bytes"

          # Check for HTML content
          if ! grep -q "<!DOCTYPE html>" "sample/sample-roster-tags.html"; then
            echo "❌ Error: Output file does not contain valid HTML"
            exit 1
          fi
          echo "✅ Output file contains valid HTML structure"

      - name: Upload generated HTML as artifact
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: test-output-html
          path: sample/sample-roster-tags.html
          retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run pnpm audit
        run: pnpm audit --audit-level=high
        continue-on-error: true

  dead-code:
    name: Dead Code Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check for unused exports
        run: pnpm deadcode
        continue-on-error: true
